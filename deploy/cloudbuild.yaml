steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-f', 'deploy/Dockerfile', '-t', 'gcr.io/$PROJECT_ID/propmatch-frontend:latest', '.']
    
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/propmatch-frontend:latest']
    
  # Deploy container image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/propmatch-frontend:latest'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '2'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'NEXT_PUBLIC_API_URL=${_API_URL},NEXT_PUBLIC_PRODUCTION_API_URL=${_PRODUCTION_API_URL},NEXT_PUBLIC_GOOGLE_CLIENT_ID=${_GOOGLE_CLIENT_ID},NEXT_PUBLIC_VIDEO_PROXY_URL=${_VIDEO_PROXY_URL},NEXT_PUBLIC_USE_GCS_VIDEOS=${_USE_GCS_VIDEOS},NODE_ENV=production'

images:
  - 'gcr.io/$PROJECT_ID/propmatch-frontend:latest'

options:
  substitutionOption: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY